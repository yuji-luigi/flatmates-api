name: ci

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: '${{steps.release.outputs.major}}.${{steps.release.outputs.minor}}.${{steps.release.outputs.patch}}'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release Generation
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          config-file: .github/workflows/release-please-config.json

  deploy:
    runs-on: ubuntu-latest
    needs: [release-please]
    if: needs.release-please.outputs.release_created == 'true'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile \
            --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest \
            --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ needs.release-please.outputs.version }}

      - name: Push the latest tag
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest

      - name: Push the version tag
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ needs.release-please.outputs.version }}

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
      #       ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{needs.release-please.outputs.version}}

      - name: Deploy to Linode VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINODE_HOST }}
          username: ${{ secrets.LINODE_USERNAME }}
          key: ${{ secrets.LINODE_SSH_PRIVATE_KEY }}
          script: |
            cd ${{secrets.LINODE_PROJECT_PATH}}
            docker-compose pull ${{secrets.IMAGE_NAME}}
            docker-compose up --build --force-recreate -d ${{secrets.IMAGE_NAME}}
            docker image prune -f
